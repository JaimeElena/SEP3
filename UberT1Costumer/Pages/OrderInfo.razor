@page "/OrderInfo"
@using UberT1Costumer.Data
@using UberT1Costumer.Models
@using UberT1Costumer.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IOrderingService OrderingService

<h3>OrderInfo</h3>
<AuthorizeView>
    <NotAuthorized>
        <h3>You need to login before access!</h3>
    </NotAuthorized>
    <Authorized>
        @if (showMenu)
        {
            <div>
                Destination:<br/>
                <InputTextArea @bind-Value="order.destination.streetname"/>
            </div>
            <button @onclick="@RequestVehicle">Request vehicle</button>
            <button @onclick="@ShowOrder">Show order</button>
        }
        
        @if (showCheck)
        {
            <div class="form-group">
                <label>@message</label>
            </div>
            <button @onclick="@CheckAccept">Check</button>
            <button @onclick="@CancelRequest">Cancel</button>
        }
        
        @if (showOrder)
        {
            @if (order == null)
            {
                <p><em>No requests exist now</em></p>
            }
            else if (order != null)
            {
                <div class="form-group">
                    Status:<br/>
                    <label>@order.status</label>
                </div>
                <div class="form-group">
                    Driver first name:<br/>
                    <label>@order.driver.firstname</label>
                </div>
                <div class="form-group">
                    Driver last name:<br/>
                    <label>@order.driver.lastname</label>
                </div>
                <div class="form-group">
                    Your Location:<br/>
                    <label>@order.customerlocation.streetname</label>
                </div>
                <div class="form-group">
                    Destination:<br/>
                    <label>@order.destination.streetname</label>
                </div>
                <div class="form-group">
                    Estimate time:<br/>
                    <label>@order.estimatetime</label>
                </div>
                <div class="form-group">
                    Price:<br/>
                    <label>@order.price</label>
                </div>
                <div class="form-group">
                    <label>@message</label>
                </div>
                <button @onclick="@CheckFinished">Check</button>
            }
        }
        @if (showFinished)
        {
            <div class="form-group">
                <label>Hope you have enjoyed your trip!</label>
            </div>
            <button @onclick="@Back">Back to menu</button>
        }
    </Authorized>
</AuthorizeView>
@code {
    private Order order = new Order();
    private bool showMenu = true;
    private bool showCheck;
    private bool showOrder;
    private bool showFinished;
    private string message = "";

    public async Task RequestVehicle()
    {
        order = OrderingService.RequestVehicle(order);
        showMenu = false;
        showCheck = true;
    }

    public async Task CancelRequest()
    {
        message = OrderingService.CancelRequest(order);
        if (message == "Cancelled")
        {
            order = new Order();
            showCheck = false;
            showMenu = true;
        }
    }

    public async Task CheckAccept()
    {
        message = OrderingService.CheckProcess(order);
        if (message == "Accept!")
        {
            order = ((UserAuthenticationStateProvider) AuthenticationStateProvider).GetOrder();
            showCheck = false;
            showOrder = true;
        }
    }

    public async Task CheckFinished()
    {
        message = OrderingService.CheckProcess(order);
        if (message == "Accept!")
        {
            showOrder = false;
        }
    }

    public async Task ShowOrder()
    {
        order = ((UserAuthenticationStateProvider) AuthenticationStateProvider).GetOrder();
        showMenu = false;
        showOrder = true;
    }

    public async Task Back()
    {
        showOrder = false;
        showMenu = true;
    }
    
}