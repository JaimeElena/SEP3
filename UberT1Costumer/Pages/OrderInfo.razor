@page "/OrderInfo"
@using UberT1Costumer.Data
@using UberT1Costumer.Models
@using UberT1Costumer.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>OrderInfo</h3>
<AuthorizeView>
    <NotAuthorized>
        <h3>You need to login before access!</h3>
    </NotAuthorized>
    <Authorized>
    @if (order == null)
            {
                <p><em>No requests exist now</em></p>
            }
            else if (order != null)
            {
                <div class="form-group">
                    Status:<br/>
                    <label>@order.status</label>
                </div>
                <div class="form-group">
                    Driver first name:<br/>
                    <label>@order.driver.firstname</label>
                </div>
                <div class="form-group">
                    Driver last name:<br/>
                    <label>@order.driver.lastname</label>
                </div>
                <div class="form-group">
                    Your Location:<br/>
                    <label>@order.customerlocation</label>
                </div>
                <div class="form-group">
                    Destination:<br/>
                    <label>@order.destination</label>
                </div>
                <div class="form-group">
                    Estimate time:<br/>
                    <label>@order.estimatetime</label>
                </div>
                <div class="form-group">
                    Price:<br/>
                    <label>@order.price</label>
                </div>
            }
    </Authorized>
</AuthorizeView>
@code {
    private Order order;

    protected override async Task OnInitializedAsync()
    {
        order = ((UserAuthenticationStateProvider) AuthenticationStateProvider).GetOrder();
    }
}