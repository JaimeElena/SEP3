@page "/requests"
@using System.Collections
@using System.Threading
@using T1Driver.Data
@using T1Driver.Models

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUserServices OrdersData

<h3>Requests</h3>
<AuthorizeView>
    <NotAuthorized>
        <h3>You need to login before access!</h3>
    </NotAuthorized>
    <ChildContent Context="another_name3">
        <Authorized>
            @if (find)
            {
                <h3>Click here to look for orders</h3>
                <button id="start" @onclick="StartFind">Start receving</button>
            }
            @if (list)
            {
                @if (orders == null)
                {
                    <p><em>Loading......</em></p>
                }
                else if (!orders.Any())
                {
                    <p><em>No requests exist now.</em></p>
                }
                else if (orders.Any())
                {
                    <EditForm Model="@orders" @OnValidSubmit="@AcceptOrder(selectOrder)">
                        <table class="table">
                            <thead>
                            <tr>
                                <td>Customer first name</td>
                                <td>Customer second name</td>
                                <td>Customer Location</td>
                                <td>Destination</td>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in orders)
                            {
                                <tr>
                                    <td>@item.firstname</td>
                                    <td>@item.secondname</td>
                                    <td>@item.customerlocation</td>
                                    <td>@item.destination</td>
                                    @{
                                        id = @item.id;
                                    }
                                    <td><input type="radio" id="check" value="@item.id" @onclick="SelectOrder"/></td>
                                </tr>
                            }
                            </tbody>
                        </table>
                        <button type="submit">Accept</button>
                        <button id="cancel" @onclick="StopFind">Cancel</button>
                    </EditForm>

                }
            }
        </Authorized>
    </ChildContent>
    <NotAuthorized>
        <h2>You need to log in to access this page!</h2>
    </NotAuthorized>
</AuthorizeView>


@code
{
    private IList<Order> orders;
    private bool find = true;
    private bool list;
    private int selectOrder;
    private int id;

    public async Task StartFind()
    {
        orders = await OrdersData.GetOrders();
        await Task.Delay(1000);
        find = false;
        list = true;
    }

    public void StopFind()
    {
        list = false;
        find = true;
        NavigationManager.NavigateTo("/");
    }

    public void SelectOrder()
    {
        selectOrder = id;
    }

    public async Task AcceptOrder(int id)
    {
        Order orderToAccept = orders.First(t => t.id == id);
        await OrdersData.AcceptOrder(orderToAccept);
        NavigationManager.NavigateTo("/OrderInfo");
    }

    
}
